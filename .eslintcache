[{"D:\\practice-tasks\\shopping-cart\\src\\index.tsx":"1","D:\\practice-tasks\\shopping-cart\\src\\App.tsx":"2","D:\\practice-tasks\\shopping-cart\\src\\types.ts":"3","D:\\practice-tasks\\shopping-cart\\src\\pages\\Products.tsx":"4","D:\\practice-tasks\\shopping-cart\\src\\components\\item\\ProductItem.tsx":"5"},{"size":552,"mtime":1611640534088,"results":"6","hashOfConfig":"7"},{"size":453,"mtime":1611645616392,"results":"8","hashOfConfig":"7"},{"size":167,"mtime":1611641735109,"results":"9","hashOfConfig":"7"},{"size":1172,"mtime":1611646660761,"results":"10","hashOfConfig":"7"},{"size":690,"mtime":1611649403012,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"15sdp1j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"D:\\practice-tasks\\shopping-cart\\src\\index.tsx",[],["26","27"],"D:\\practice-tasks\\shopping-cart\\src\\App.tsx",["28","29","30","31","32"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\n// components\nimport { Drawer, LinearProgress, Grid, Badge } from \"@material-ui/core/\";\nimport { AddShoppingCart } from \"@material-ui/icons\";\nimport Products from \"./pages/Products\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Products} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","D:\\practice-tasks\\shopping-cart\\src\\types.ts",[],"D:\\practice-tasks\\shopping-cart\\src\\pages\\Products.tsx",["33","34","35","36","37","38"],"import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { CartItemType } from \"../types\";\r\n\r\n// components\r\nimport { Drawer, LinearProgress, Grid, Badge, Container } from \"@material-ui/core/\";\r\nimport { AddShoppingCart } from \"@material-ui/icons\";\r\nimport ProductItem from \"../components/item/ProductItem\";\r\nconst fetchProducts = async (): Promise<CartItemType[]> => {\r\n  return await (await fetch(\"https://fakestoreapi.com/products\")).json();\r\n};\r\n\r\nconst Products = () => {\r\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\"products\", fetchProducts);\r\n  console.log(data);\r\n  const getTotalItems = () => null;\r\n  const handleAddToCart = () => null;\r\n  const handleRemoleFromCart = () => null;\r\n  if (isLoading) return <LinearProgress />;\r\n  if (error) return <div>Something went wrong...</div>;\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        {data?.map((item) => (\r\n          <Grid item sm={4} key={item.id}>\r\n            <ProductItem item={item} handleAddToCart={handleAddToCart}></ProductItem>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>  \r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\practice-tasks\\shopping-cart\\src\\components\\item\\ProductItem.tsx",["39"],"import { CartItemType } from \"../../types\";\r\nimport { Button } from \"@material-ui/core\";\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (addedItem: CartItemType) => void;\r\n};\r\n\r\nconst ProductItem: React.FC<Props> = ({ item, handleAddToCart }) => {\r\n  return (\r\n    <div className=\"product-item\">\r\n      <img src={item.image} alt={item.title} />\r\n      <div>\r\n        <h3>{item.title}</h3>\r\n        <p>{item.description.length < 120 ? `${item.description}` : `${item.description.substring(0, 117)}...`}</p>\r\n        <h3>${item.price}</h3>\r\n      </div>\r\n      <button onClick={() => handleAddToCart(item)}>Add to cart</button>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductItem;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":5,"column":18,"nodeType":"46","messageId":"47","endLine":5,"endColumn":32},{"ruleId":"44","severity":1,"message":"49","line":5,"column":34,"nodeType":"46","messageId":"47","endLine":5,"endColumn":38},{"ruleId":"44","severity":1,"message":"50","line":5,"column":40,"nodeType":"46","messageId":"47","endLine":5,"endColumn":45},{"ruleId":"44","severity":1,"message":"51","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":25},{"ruleId":"44","severity":1,"message":"52","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":16},{"ruleId":"44","severity":1,"message":"50","line":6,"column":40,"nodeType":"46","messageId":"47","endLine":6,"endColumn":45},{"ruleId":"44","severity":1,"message":"51","line":7,"column":10,"nodeType":"46","messageId":"47","endLine":7,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":16,"column":9,"nodeType":"46","messageId":"47","endLine":16,"endColumn":22},{"ruleId":"44","severity":1,"message":"54","line":18,"column":9,"nodeType":"46","messageId":"47","endLine":18,"endColumn":29},{"ruleId":"44","severity":1,"message":"55","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","'LinearProgress' is defined but never used.","'Grid' is defined but never used.","'Badge' is defined but never used.","'AddShoppingCart' is defined but never used.","'useState' is defined but never used.","'getTotalItems' is assigned a value but never used.","'handleRemoleFromCart' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]